syntax = "proto2";

package kig.core;

option java_package = "dev.rocco.kig.core.mode.logging";
option java_outer_classname = "GameLogProtocol";

import "cai.proto";

message Player {
  required bytes uuid = 1;
  required string name = 2;
}

message Team {
  required string name = 1;
  required int32 score = 2;
  repeated Player players = 3;
  optional int32 color = 4;
}

message TimeEvent {
  enum ModeState {
    LOBBY = 1;
    WARMUP = 2;
    GAME = 3;
    ENDGAME = 4;
  }
  required GameEvent event = 1;
  required int32 time = 2;
  required ModeState state = 3;
}

message GameLog {
  repeated Team teams = 1;
  optional string winner = 2;
  required int64 game_start = 3;
  required int64 game_end = 4;
  required int32 start_players = 5;
  repeated TimeEvent events = 6;
  required string map = 110; // For backwards compatibility with old CAI logs

  // extensions 100 to max;
  // Add extensions here instead
  oneof extension {
    CaiExtension cai = 112;
    TimvExtension timv = 113;
  }
}

message CaiExtension {
  // required string map = 1; // Moved to GameLog
}
message TimvExtension {}

// Events and extensions

message GameEvent {
  // extensions 100 to max;
  // Add extensions here instead
  oneof extension {
    ChatEvent Chat = 100;
    JoinEvent Join = 101;
    LeaveEvent Leave = 102;
    kig.cai.CatchEvent Catch = 110;
    kig.cai.EscapeEvent Escape = 111;
    kig.cai.CaptureEvent Capture = 112;
    kig.cai.DeathEvent Death = 113;
  }
}

message ChatEvent {
  enum ChatType {
    LOBBY = 1;
    TEAM = 2;
    SHOUT = 3;
    BROADCAST = 4;
    GLOBAL = 5;
  }
  required string sender = 1;
  required string message = 2;
  required ChatType type = 3;
  optional int32 count = 4;
}

message JoinEvent {
  required string player = 1;
  required int32 team = 2;
}

message LeaveEvent { required string player = 1; }