syntax = "proto2";

package kigcore;

option java_package = "dev.rocco.kig.core.mode.logging";
option java_outer_classname = "GameLogProtocol";

enum BukkitDamageCause {
  ENTITY_ATTACK = 1;
  PROJECTILE = 2;
  VOID = 3;
  SUFFOCATION = 4;
  FIRE = 5;
  FIRE_TICK = 6;
  OTHER = 7;
}

message Player {
  required bytes uuid = 1;
  required string name = 2;
}

message Team {
  required string name = 1;
  required int32 score = 2;
  repeated Player players = 3;
  optional int32 color = 4;
}

message TimeEvent {
  enum ModeState {
    LOBBY = 1;
    WARMUP = 2;
    GAME = 3;
    ENDGAME = 4;
  }
  required GameEvent event = 1;
  required int32 time = 2;
  required ModeState state = 3;
}

message GameEvent { extensions 100 to max; }

extend GameEvent {
  optional ChatEvent chat = 100;
  optional JoinEvent join = 101;
  optional LeaveEvent leave = 102;
}

message ChatEvent {
  enum ChatType {
    LOBBY = 1;
    TEAM = 2;
    SHOUT = 3;
    BROADCAST = 4;
    GLOBAL = 5; // Used for modes that only have 1 chat, e.g. TIMV
  }
  required string sender = 1;
  required string message = 2;
  required ChatType type = 3;
  optional int32 count = 4;
  // When the team is different from the one that can be inferred from context,
  // e.g. when a dead player writes in spec chat
  optional int32 team = 5;
}

message JoinEvent {
  required string player = 1;
  required int32 team = 2;
}

message LeaveEvent { required string player = 1; }

message GameLog {
  repeated Team teams = 1;
  optional string winner = 2;
  required int64 game_start = 3;
  required int64 game_end = 4;
  required int32 start_players = 5;
  repeated TimeEvent events = 6;
  // Keep backwards-compatibility with old CAI logs that had the map as an
  // extension with ID 110
  optional string map = 110;
  extensions 112 to max;
}